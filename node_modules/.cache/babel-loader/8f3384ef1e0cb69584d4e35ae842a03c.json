{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\ProjectBankofReact\\\\bank-of-react\\\\src\\\\components\\\\Debits.js\",\n    _s = $RefreshSig$();\n\n/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Debits = props => {\n  _s();\n\n  // Local state for managing form input values\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(''); // Function to create the list of Debit items\n\n  let debitsView = () => {\n    const {\n      debits\n    } = props;\n    return debits.map(debit => {\n      // Extract \"id\", \"amount\", \"description\", and \"date\" properties of each debit\n      let date = debit.date.slice(0, 10); // Format the date to yyyy-mm-dd\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [debit.amount, \" \", debit.description, \" \", date]\n      }, debit.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    });\n  }; // Handle form submission to add a new debit\n\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Round the amount to two decimal places\n\n    const roundedAmount = parseFloat(amount).toFixed(2); // Create a new debit object\n\n    const newDebit = {\n      id: Date.now(),\n      // Use current timestamp as a unique ID\n      amount: parseFloat(roundedAmount),\n      // Ensure amount is a number\n      description: description,\n      date: new Date().toISOString() // Get the current date in ISO format\n\n    }; // Call the addDebit function passed as a prop from the parent component\n\n    props.addDebit(newDebit); // Clear the form input fields\n\n    setDescription('');\n    setAmount('');\n  }; // Render the list of Debit items and the form to input new Debit item\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Debits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: debitsView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value) // Update description value\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value) // Update amount value\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Debit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Return to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Debits, \"72h220K6CWaqXV0R8dn7euBVcCg=\");\n\n_c = Debits;\nexport default Debits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Debits\");","map":{"version":3,"sources":["C:/Users/carlo/ProjectBankofReact/bank-of-react/src/components/Debits.js"],"names":["Link","useState","Debits","props","description","setDescription","amount","setAmount","debitsView","debits","map","debit","date","slice","id","handleSubmit","event","preventDefault","roundedAmount","parseFloat","toFixed","newDebit","Date","now","toISOString","addDebit","e","target","value"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst Debits = (props) => {\r\n  // Local state for managing form input values\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  // Function to create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\", and \"date\" properties of each debit\r\n      let date = debit.date.slice(0, 10);  // Format the date to yyyy-mm-dd\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>;\r\n    });\r\n  };\r\n\r\n  // Handle form submission to add a new debit\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Round the amount to two decimal places\r\n    const roundedAmount = parseFloat(amount).toFixed(2);\r\n\r\n    // Create a new debit object\r\n    const newDebit = {\r\n      id: Date.now(),  // Use current timestamp as a unique ID\r\n      amount: parseFloat(roundedAmount),  // Ensure amount is a number\r\n      description: description,\r\n      date: new Date().toISOString(),  // Get the current date in ISO format\r\n    };\r\n\r\n    // Call the addDebit function passed as a prop from the parent component\r\n    props.addDebit(newDebit);\r\n\r\n    // Clear the form input fields\r\n    setDescription('');\r\n    setAmount('');\r\n  };\r\n\r\n  // Render the list of Debit items and the form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      <ul>\r\n        {debitsView()}\r\n      </ul>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}  // Update description value\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}  // Update amount value\r\n        />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;\r\n"]},"metadata":{},"sourceType":"module"}