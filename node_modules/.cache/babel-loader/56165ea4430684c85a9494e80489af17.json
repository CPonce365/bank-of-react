{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\ProjectBankofReact\\\\bank-of-react\\\\src\\\\App.js\";\n\n/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.calculateBalance = (credits, debits) => {\n      const totalCredits = credits.reduce((sum, credit) => sum + credit.amount, 0);\n      const totalDebits = debits.reduce((sum, debit) => sum + debit.amount, 0);\n      return parseFloat((totalCredits - totalDebits).toFixed(2));\n    };\n\n    this.addCredit = (description, amount) => {\n      const newCredit = {\n        description,\n        amount: parseFloat(amount),\n        date: new Date().toISOString().split('T')[0]\n      };\n      this.setState(prevState => {\n        const updatedCredits = [...prevState.credits, newCredit];\n        const updatedBalance = prevState.accountBalance + newCredit.amount;\n        return {\n          credits: updatedCredits,\n          accountBalance: updatedBalance\n        };\n      });\n    };\n\n    this.addDebit = (description, amount) => {\n      const newDebit = {\n        description,\n        amount: parseFloat(amount),\n        date: new Date().toISOString().split('T')[0]\n      };\n      this.setState(prevState => {\n        const updatedDebits = [...prevState.debitList, newDebit];\n        return {\n          debits: updatedDebits,\n          accountBalance: this.calculateBalance(prevState.credits, updatedDebits)\n        };\n      });\n    };\n\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  componentDidMount() {\n    fetch('https://johnnylaicode.github.io/api/debits.json').then(response => response.json()).then(data => {\n      let totalDebit = 0;\n      const debits = data.map(debit => {\n        totalDebit += debit.amount;\n        return debit;\n      });\n      this.setState({\n        debitList: debits,\n        accountBalance: this.state.accountBalance - totalDebit\n      });\n    }).catch(err => console.log('Error', err));\n    fetch('https://johnnylaicode.github.io/api/credits.json').then(response => response.json()).then(data => {\n      let totalCredit = 0;\n      const credits = data.map(credit => {\n        totalCredit += credit.amount;\n        return credit;\n      });\n      this.setState({\n        creditList: credits,\n        accountBalance: this.state.accountBalance + totalCredit\n      });\n    }).catch(err => console.log('Error', err));\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList,\n      addCredit: this.addCredit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList,\n      addDebit: this.addDebit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-starter-code\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/carlo/ProjectBankofReact/bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","calculateBalance","credits","debits","totalCredits","reduce","sum","credit","amount","totalDebits","debit","parseFloat","toFixed","addCredit","description","newCredit","date","Date","toISOString","split","prevState","updatedCredits","updatedBalance","accountBalance","addDebit","newDebit","updatedDebits","debitList","creditList","memberSince","componentDidMount","fetch","then","response","json","data","totalDebit","map","catch","err","console","log","totalCredit","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://johnnylaicode.github.io/api/debits.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let totalDebit = 0;\r\n        const debits = data.map((debit) => {\r\n          totalDebit += debit.amount;\r\n          return debit;\r\n        })\r\n        this.setState({\r\n          debitList: debits,\r\n          accountBalance: this.state.accountBalance - totalDebit,\r\n        })\r\n      })\r\n      .catch((err) => console.log('Error', err));\r\n\r\n      fetch('https://johnnylaicode.github.io/api/credits.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let totalCredit = 0;\r\n        const credits = data.map((credit) => {\r\n          totalCredit += credit.amount;\r\n          return credit;\r\n        });\r\n        this.setState({\r\n          creditList: credits,\r\n          accountBalance: this.state.accountBalance + totalCredit,\r\n        });\r\n      })\r\n      .catch((err) => console.log('Error', err));\r\n\r\n  }\r\n\r\n  calculateBalance = (credits, debits) => {\r\n    const totalCredits = credits.reduce((sum, credit) => sum + credit.amount, 0);\r\n    const totalDebits = debits.reduce((sum, debit) => sum + debit.amount, 0);\r\n    return parseFloat((totalCredits - totalDebits).toFixed(2));\r\n  }\r\n\r\n  addCredit = (description, amount) => {\r\n    const newCredit = {\r\n      description,\r\n      amount: parseFloat(amount),\r\n      date: new Date().toISOString().split('T')[0],\r\n    };\r\n\r\n    this.setState((prevState) => {\r\n      const updatedCredits = [...prevState.credits, newCredit];\r\n      const updatedBalance = prevState.accountBalance + newCredit.amount;\r\n      return { credits: updatedCredits, accountBalance: updatedBalance };\r\n    });\r\n  }; \r\n\r\n  addDebit = (description, amount) => {\r\n    const newDebit = {\r\n      description,\r\n      amount: parseFloat(amount),\r\n      date: new Date().toISOString().split('T')[0]\r\n    };\r\n    \r\n    this.setState(prevState => {\r\n      const updatedDebits = [...prevState.debitList, newDebit];\r\n      return {\r\n        debits: updatedDebits,\r\n        accountBalance: this.calculateBalance(prevState.credits, updatedDebits)\r\n      };\r\n    });\r\n  };  \r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-starter-code\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}