{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\ProjectBankofReact\\\\bank-of-react\\\\src\\\\components\\\\Credits.js\",\n    _s = $RefreshSig$();\n\n/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Credits = props => {\n  _s();\n\n  const {\n    addCredit,\n    accountBalance\n  } = props;\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (description && amount) {\n      addCredit(description, parseFloat(amount));\n      setDescription('');\n      setAmount('');\n    }\n  };\n\n  let creditsView = () => {\n    const {\n      credits\n    } = props;\n    return credits.map((credit, index) => {\n      // Use index if no unique id exists\n      let date = credit.date.slice(0, 10);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"  \", credit.amount, \" \", credit.description, \" \", date]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: \"Credits List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), creditsView(), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Account Balance: $\", accountBalance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Credits, \"72h220K6CWaqXV0R8dn7euBVcCg=\");\n\n_c = Credits;\nexport default Credits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["C:/Users/carlo/ProjectBankofReact/bank-of-react/src/components/Credits.js"],"names":["Link","React","useState","Credits","props","addCredit","accountBalance","description","setDescription","amount","setAmount","handleSubmit","e","preventDefault","parseFloat","creditsView","credits","map","credit","index","date","slice","textAlign","marginBottom","marginTop","target","value","toFixed"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA8BF,KAApC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,WAAW,IAAIE,MAAnB,EAA2B;AACzBJ,MAAAA,SAAS,CAACE,WAAD,EAAcO,UAAU,CAACL,MAAD,CAAxB,CAAT;AACAD,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,GAPD;;AASA,MAAIK,WAAW,GAAG,MAAM;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAcZ,KAApB;AACA,WAAOY,OAAO,CAACC,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAAG;AACvC,UAAIC,IAAI,GAAGF,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAX;AACA,0BACE;AAAA,yBACGH,MAAM,CAACT,MADV,OACmBS,MAAM,CAACX,WAD1B,OACwCa,IADxC;AAAA,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAPM,CAAP;AAQD,GAVD;;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,YAAY,EAAE;AAArC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGR,WAAW,EAJd,eAME;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAA8B,MAAA,KAAK,EAAE;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAArC;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,KAAK,EAAEjB,WAHT;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV,CAJjC;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,KAAK,EAAEjB,MAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CAJ5B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAyBE;AAAA,uCAAuBpB,cAAc,CAACqB,OAAf,CAAuB,CAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF,eA2BE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA,6BACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA7DD;;GAAMxB,O;;KAAAA,O;AA+DN,eAAeA,OAAf","sourcesContent":["/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nconst Credits = (props) => {\r\n  const {addCredit, accountBalance} = props;\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (description && amount) {\r\n      addCredit(description, parseFloat(amount));\r\n      setDescription('');\r\n      setAmount('');\r\n    }\r\n  };\r\n\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit, index) => {  // Use index if no unique id exists\r\n      let date = credit.date.slice(0, 10);\r\n      return (\r\n        <li key={index}>  {/* Use index as a last resort */}\r\n          {credit.amount} {credit.description} {date}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      <h2 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>Credits List</h2>\r\n      {creditsView()}\r\n\r\n      <form onSubmit={handleSubmit} style={{ marginTop: \"20px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n\r\n      \r\n      <h3>Account Balance: ${accountBalance.toFixed(2)}</h3>\r\n\r\n      <Link to=\"/\">\r\n            <button>Home</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;"]},"metadata":{},"sourceType":"module"}