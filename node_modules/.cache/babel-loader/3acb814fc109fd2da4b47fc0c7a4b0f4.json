{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\ProjectBankofReact\\\\bank-of-react\\\\src\\\\App.js\";\n\n/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.addCredit = credit => {\n      this.setState(prevState => ({\n        creditList: [credit, ...prevState.creditList],\n        accountBalance: prevState.accountBalance + credit.amount\n      }));\n    };\n\n    this.addDebit = newDebit => {\n      this.setState(prevState => ({\n        debitList: [debit, ...prevState.debitList],\n        accountBalance: prevState.accountBalance - debit.amount\n      }));\n    };\n\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  componentDidMount() {\n    fetch('https://johnnylaicode.github.io/api/debits.json').then(response => response.json()).then(data => {\n      let totalDebit = 0;\n      const debits = data.map(debit => {\n        totalDebit += debit.amount;\n        return debit;\n      });\n      this.setState({\n        debitList: debits,\n        accountBalance: this.state.accountBalance - totalDebit\n      });\n    }).catch(err => console.log('Error', err));\n    fetch('https://johnnylaicode.github.io/api/credits.json').then(response => response.json()).then(data => {\n      let totalCredit = 0;\n      const credits = data.map(credit => {\n        totalCredit += credit.amount;\n        return credit;\n      });\n      this.setState({\n        creditList: credits,\n        accountBalance: this.state.accountBalance + totalCredit\n      });\n    }).catch(err => console.log('Error', err));\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-starter-code\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/carlo/ProjectBankofReact/bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addCredit","credit","prevState","creditList","accountBalance","amount","addDebit","newDebit","debitList","debit","memberSince","componentDidMount","fetch","then","response","json","data","totalDebit","debits","map","catch","err","console","log","totalCredit","credits","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://johnnylaicode.github.io/api/debits.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let totalDebit = 0;\r\n        const debits = data.map((debit) => {\r\n          totalDebit += debit.amount;\r\n          return debit;\r\n        })\r\n        this.setState({\r\n          debitList: debits,\r\n          accountBalance: this.state.accountBalance - totalDebit,\r\n        })\r\n      })\r\n      .catch((err) => console.log('Error', err));\r\n\r\n      fetch('https://johnnylaicode.github.io/api/credits.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let totalCredit = 0;\r\n        const credits = data.map((credit) => {\r\n          totalCredit += credit.amount;\r\n          return credit;\r\n        });\r\n        this.setState({\r\n          creditList: credits,\r\n          accountBalance: this.state.accountBalance + totalCredit,\r\n        });\r\n      })\r\n      .catch((err) => console.log('Error', err));\r\n\r\n  }\r\n\r\n  addCredit = (credit) => {\r\n    this.setState((prevState) => ({\r\n      creditList: [credit, ...prevState.creditList],\r\n      accountBalance: prevState.accountBalance + credit.amount,\r\n    }));\r\n  };\r\n\r\n  addDebit = (newDebit) => {\r\n    this.setState((prevState) => ({\r\n      debitList: [debit, ...prevState.debitList],\r\n      accountBalance: prevState.accountBalance - debit.amount,\r\n    }));\r\n  };\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-starter-code\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}